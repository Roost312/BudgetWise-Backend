// <auto-generated />
using System;
using BudgetWise.Api;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BudgetWise.Api.Migrations
{
    [DbContext(typeof(BudgetWiseDbContext))]
    [Migration("20211023211859_TransactionTableRelationships")]
    partial class TransactionTableRelationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("BudgetWise.Api.Entities.CategoriesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BudgetWise.Api.Entities.LabelsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("AppliedAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("applied_amount");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("due_date");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<decimal>("PlannedAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("planned_amount");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("BudgetWise.Api.Entities.TransactionsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<bool>("ApplyToDaily")
                        .HasColumnType("boolean")
                        .HasColumnName("apply_to_daily");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_applied");

                    b.Property<int>("LabelId")
                        .HasColumnType("integer")
                        .HasColumnName("label_id");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("LabelId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BudgetWise.Api.Entities.LabelsEntity", b =>
                {
                    b.HasOne("BudgetWise.Api.Entities.CategoriesEntity", "Category")
                        .WithMany("CategoryLabels")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BudgetWise.Api.Entities.TransactionsEntity", b =>
                {
                    b.HasOne("BudgetWise.Api.Entities.LabelsEntity", "Label")
                        .WithMany("LabelTransactions")
                        .HasForeignKey("LabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Label");
                });

            modelBuilder.Entity("BudgetWise.Api.Entities.CategoriesEntity", b =>
                {
                    b.Navigation("CategoryLabels");
                });

            modelBuilder.Entity("BudgetWise.Api.Entities.LabelsEntity", b =>
                {
                    b.Navigation("LabelTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
